//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24817639
// Cuda compilation tools, release 10.0, V10.0.130
// Based on LLVM 3.4svn
//

.version 6.3
.target sm_75
.address_size 64

	// .globl	FluffySeed2A
.const .align 8 .b8 recovery[336];
// _ZZ12FluffySeed2AE3tmp has been demoted
// _ZZ12FluffySeed2AE8counters has been demoted
// _ZZ12FluffySeed2BE3tmp has been demoted
// _ZZ12FluffySeed2BE8counters has been demoted
// _ZZ11FluffyRoundE9ecounters has been demoted
// _ZZ10FluffyTailE7destIdx has been demoted
// _ZZ14FluffyRecoveryE6nonces has been demoted

.visible .entry FluffySeed2A(
	.param .u64 FluffySeed2A_param_0,
	.param .u64 FluffySeed2A_param_1,
	.param .u64 FluffySeed2A_param_2,
	.param .u64 FluffySeed2A_param_3,
	.param .u64 FluffySeed2A_param_4,
	.param .u64 FluffySeed2A_param_5
)
{
	.local .align 16 .b8 	__local_depot0[512];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<250>;
	.reg .b64 	%rd<205>;
	// demoted variable
	.shared .align 8 .b8 _ZZ12FluffySeed2AE3tmp[8192];
	// demoted variable
	.shared .align 4 .b8 _ZZ12FluffySeed2AE8counters[256];

	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd27, [FluffySeed2A_param_4];
	ld.param.u64 	%rd28, [FluffySeed2A_param_5];
	cvta.to.global.u64 	%rd1, %rd27;
	cvta.to.global.u64 	%rd2, %rd28;
	add.u64 	%rd3, %SPL, 0;
	mov.u32 	%r1, %tid.x;
	shl.b32 	%r14, %r1, 2;
	mov.u32 	%r15, _ZZ12FluffySeed2AE8counters;
	add.s32 	%r2, %r15, %r14;
	setp.gt.s32	%p2, %r1, 63;
	@%p2 bra 	BB0_2;

	mov.u32 	%r16, 0;
	st.shared.u32 	[%r2], %r16;

BB0_2:
	bar.sync 	0;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %ntid.x;
	mad.lo.s32 	%r20, %r18, %r19, %r1;
	shl.b32 	%r3, %r20, 11;
	mov.u32 	%r248, 0;

BB0_3:
	ld.param.u64 	%rd203, [FluffySeed2A_param_0];
	ld.param.u64 	%rd202, [FluffySeed2A_param_1];
	ld.param.u64 	%rd201, [FluffySeed2A_param_2];
	ld.param.u64 	%rd200, [FluffySeed2A_param_3];
	mov.u32 	%r249, 0;
	add.s32 	%r22, %r3, %r248;
	cvt.s64.s32	%rd199, %r22;
	mov.u64 	%rd198, %rd3;

BB0_4:
	xor.b64  	%rd30, %rd199, %rd200;
	add.s64 	%rd31, %rd30, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r23}, %rd30;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r24,%dummy}, %rd30;
	}
	shf.l.wrap.b32 	%r25, %r24, %r23, 16;
	shf.l.wrap.b32 	%r26, %r23, %r24, 16;
	mov.b64 	%rd32, {%r26, %r25};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27}, %rd202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28,%dummy}, %rd202;
	}
	shf.l.wrap.b32 	%r29, %r28, %r27, 13;
	shf.l.wrap.b32 	%r30, %r27, %r28, 13;
	mov.b64 	%rd33, {%r30, %r29};
	add.s64 	%rd34, %rd202, %rd203;
	xor.b64  	%rd35, %rd33, %rd34;
	xor.b64  	%rd36, %rd32, %rd31;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd34, 32;
	shr.b64 	%rhs, %rd34, 32;
	add.u64 	%rd37, %lhs, %rhs;
	}
	add.s64 	%rd38, %rd35, %rd31;
	add.s64 	%rd39, %rd36, %rd37;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r31}, %rd35;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r32,%dummy}, %rd35;
	}
	shf.l.wrap.b32 	%r33, %r32, %r31, 17;
	shf.l.wrap.b32 	%r34, %r31, %r32, 17;
	mov.b64 	%rd40, {%r34, %r33};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35}, %rd36;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36,%dummy}, %rd36;
	}
	shf.l.wrap.b32 	%r37, %r36, %r35, 21;
	shf.l.wrap.b32 	%r38, %r35, %r36, 21;
	mov.b64 	%rd41, {%r38, %r37};
	xor.b64  	%rd42, %rd40, %rd38;
	xor.b64  	%rd43, %rd41, %rd39;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd38, 32;
	shr.b64 	%rhs, %rd38, 32;
	add.u64 	%rd44, %lhs, %rhs;
	}
	add.s64 	%rd45, %rd42, %rd39;
	add.s64 	%rd46, %rd43, %rd44;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39}, %rd42;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r40,%dummy}, %rd42;
	}
	shf.l.wrap.b32 	%r41, %r40, %r39, 13;
	shf.l.wrap.b32 	%r42, %r39, %r40, 13;
	mov.b64 	%rd47, {%r42, %r41};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r43}, %rd43;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r44,%dummy}, %rd43;
	}
	shf.l.wrap.b32 	%r45, %r44, %r43, 16;
	shf.l.wrap.b32 	%r46, %r43, %r44, 16;
	mov.b64 	%rd48, {%r46, %r45};
	xor.b64  	%rd49, %rd47, %rd45;
	xor.b64  	%rd50, %rd48, %rd46;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd45, 32;
	shr.b64 	%rhs, %rd45, 32;
	add.u64 	%rd51, %lhs, %rhs;
	}
	add.s64 	%rd52, %rd49, %rd46;
	add.s64 	%rd53, %rd50, %rd51;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r47}, %rd49;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r48,%dummy}, %rd49;
	}
	shf.l.wrap.b32 	%r49, %r48, %r47, 17;
	shf.l.wrap.b32 	%r50, %r47, %r48, 17;
	mov.b64 	%rd54, {%r50, %r49};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r51}, %rd50;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r52,%dummy}, %rd50;
	}
	shf.l.wrap.b32 	%r53, %r52, %r51, 21;
	shf.l.wrap.b32 	%r54, %r51, %r52, 21;
	mov.b64 	%rd55, {%r54, %r53};
	xor.b64  	%rd56, %rd54, %rd52;
	xor.b64  	%rd57, %rd55, %rd53;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd52, 32;
	shr.b64 	%rhs, %rd52, 32;
	add.u64 	%rd58, %lhs, %rhs;
	}
	xor.b64  	%rd59, %rd53, %rd199;
	xor.b64  	%rd60, %rd58, 255;
	add.s64 	%rd61, %rd56, %rd59;
	add.s64 	%rd62, %rd57, %rd60;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r55}, %rd56;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r56,%dummy}, %rd56;
	}
	shf.l.wrap.b32 	%r57, %r56, %r55, 13;
	shf.l.wrap.b32 	%r58, %r55, %r56, 13;
	mov.b64 	%rd63, {%r58, %r57};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r59}, %rd57;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r60,%dummy}, %rd57;
	}
	shf.l.wrap.b32 	%r61, %r60, %r59, 16;
	shf.l.wrap.b32 	%r62, %r59, %r60, 16;
	mov.b64 	%rd64, {%r62, %r61};
	xor.b64  	%rd65, %rd63, %rd61;
	xor.b64  	%rd66, %rd64, %rd62;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd61, 32;
	shr.b64 	%rhs, %rd61, 32;
	add.u64 	%rd67, %lhs, %rhs;
	}
	add.s64 	%rd68, %rd65, %rd62;
	add.s64 	%rd69, %rd66, %rd67;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r63}, %rd65;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd65;
	}
	shf.l.wrap.b32 	%r65, %r64, %r63, 17;
	shf.l.wrap.b32 	%r66, %r63, %r64, 17;
	mov.b64 	%rd70, {%r66, %r65};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r67}, %rd66;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r68,%dummy}, %rd66;
	}
	shf.l.wrap.b32 	%r69, %r68, %r67, 21;
	shf.l.wrap.b32 	%r70, %r67, %r68, 21;
	mov.b64 	%rd71, {%r70, %r69};
	xor.b64  	%rd72, %rd70, %rd68;
	xor.b64  	%rd73, %rd71, %rd69;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd68, 32;
	shr.b64 	%rhs, %rd68, 32;
	add.u64 	%rd74, %lhs, %rhs;
	}
	add.s64 	%rd75, %rd72, %rd69;
	add.s64 	%rd76, %rd73, %rd74;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r71}, %rd72;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r72,%dummy}, %rd72;
	}
	shf.l.wrap.b32 	%r73, %r72, %r71, 13;
	shf.l.wrap.b32 	%r74, %r71, %r72, 13;
	mov.b64 	%rd77, {%r74, %r73};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r75}, %rd73;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd73;
	}
	shf.l.wrap.b32 	%r77, %r76, %r75, 16;
	shf.l.wrap.b32 	%r78, %r75, %r76, 16;
	mov.b64 	%rd78, {%r78, %r77};
	xor.b64  	%rd79, %rd77, %rd75;
	xor.b64  	%rd80, %rd78, %rd76;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd75, 32;
	shr.b64 	%rhs, %rd75, 32;
	add.u64 	%rd81, %lhs, %rhs;
	}
	add.s64 	%rd82, %rd79, %rd76;
	add.s64 	%rd83, %rd80, %rd81;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r79}, %rd79;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r80,%dummy}, %rd79;
	}
	shf.l.wrap.b32 	%r81, %r80, %r79, 17;
	shf.l.wrap.b32 	%r82, %r79, %r80, 17;
	mov.b64 	%rd84, {%r82, %r81};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r83}, %rd80;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r84,%dummy}, %rd80;
	}
	shf.l.wrap.b32 	%r85, %r84, %r83, 21;
	shf.l.wrap.b32 	%r86, %r83, %r84, 21;
	mov.b64 	%rd85, {%r86, %r85};
	xor.b64  	%rd86, %rd84, %rd82;
	xor.b64  	%rd87, %rd85, %rd83;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd82, 32;
	shr.b64 	%rhs, %rd82, 32;
	add.u64 	%rd88, %lhs, %rhs;
	}
	add.s64 	%rd89, %rd86, %rd83;
	add.s64 	%rd90, %rd87, %rd88;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r87}, %rd86;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r88,%dummy}, %rd86;
	}
	shf.l.wrap.b32 	%r89, %r88, %r87, 13;
	shf.l.wrap.b32 	%r90, %r87, %r88, 13;
	mov.b64 	%rd91, {%r90, %r89};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r91}, %rd87;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r92,%dummy}, %rd87;
	}
	shf.l.wrap.b32 	%r93, %r92, %r91, 16;
	shf.l.wrap.b32 	%r94, %r91, %r92, 16;
	mov.b64 	%rd92, {%r94, %r93};
	xor.b64  	%rd93, %rd91, %rd89;
	xor.b64  	%rd94, %rd92, %rd90;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd89, 32;
	shr.b64 	%rhs, %rd89, 32;
	add.u64 	%rd95, %lhs, %rhs;
	}
	add.s64 	%rd96, %rd93, %rd90;
	add.s64 	%rd97, %rd94, %rd95;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r95}, %rd93;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r96,%dummy}, %rd93;
	}
	shf.l.wrap.b32 	%r97, %r96, %r95, 17;
	shf.l.wrap.b32 	%r98, %r95, %r96, 17;
	mov.b64 	%rd98, {%r98, %r97};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r99}, %rd94;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r100,%dummy}, %rd94;
	}
	shf.l.wrap.b32 	%r101, %r100, %r99, 21;
	shf.l.wrap.b32 	%r102, %r99, %r100, 21;
	mov.b64 	%rd99, {%r102, %r101};
	xor.b64  	%rd100, %rd98, %rd96;
	xor.b64  	%rd101, %rd99, %rd97;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd96, 32;
	shr.b64 	%rhs, %rd96, 32;
	add.u64 	%rd102, %lhs, %rhs;
	}
	add.s64 	%rd103, %rd100, %rd97;
	add.s64 	%rd104, %rd101, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r103}, %rd100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r104,%dummy}, %rd100;
	}
	shf.l.wrap.b32 	%r105, %r104, %r103, 13;
	shf.l.wrap.b32 	%r106, %r103, %r104, 13;
	mov.b64 	%rd105, {%r106, %r105};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r107}, %rd101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r108,%dummy}, %rd101;
	}
	shf.l.wrap.b32 	%r109, %r108, %r107, 16;
	shf.l.wrap.b32 	%r110, %r107, %r108, 16;
	mov.b64 	%rd106, {%r110, %r109};
	xor.b64  	%rd107, %rd105, %rd103;
	xor.b64  	%rd108, %rd106, %rd104;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd103, 32;
	shr.b64 	%rhs, %rd103, 32;
	add.u64 	%rd109, %lhs, %rhs;
	}
	add.s64 	%rd110, %rd107, %rd104;
	add.s64 	%rd203, %rd108, %rd109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r111}, %rd107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r112,%dummy}, %rd107;
	}
	shf.l.wrap.b32 	%r113, %r112, %r111, 17;
	shf.l.wrap.b32 	%r114, %r111, %r112, 17;
	mov.b64 	%rd111, {%r114, %r113};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r115}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r116,%dummy}, %rd108;
	}
	shf.l.wrap.b32 	%r117, %r116, %r115, 21;
	shf.l.wrap.b32 	%r118, %r115, %r116, 21;
	mov.b64 	%rd112, {%r118, %r117};
	xor.b64  	%rd202, %rd111, %rd110;
	xor.b64  	%rd200, %rd112, %rd203;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd110, 32;
	shr.b64 	%rhs, %rd110, 32;
	add.u64 	%rd201, %lhs, %rhs;
	}
	xor.b64  	%rd113, %rd202, %rd203;
	xor.b64  	%rd114, %rd113, %rd201;
	xor.b64  	%rd115, %rd114, %rd200;
	st.local.u64 	[%rd198], %rd115;
	add.s64 	%rd199, %rd199, 1;
	add.s64 	%rd198, %rd198, 8;
	add.s32 	%r249, %r249, 1;
	setp.lt.u32	%p3, %r249, 64;
	@%p3 bra 	BB0_4;

	add.s64 	%rd196, %rd3, 504;
	ld.local.u64 	%rd18, [%rd196];
	mov.u16 	%rs4, 0;

BB0_6:
	cvt.s32.s16	%r119, %rs4;
	mul.wide.s32 	%rd116, %r119, 8;
	add.s64 	%rd19, %rd3, %rd116;
	ld.local.u64 	%rd117, [%rd19];
	xor.b64  	%rd20, %rd117, %rd18;
	cvt.u32.u64	%r120, %rd117;
	cvt.u32.u64	%r121, %rd18;
	xor.b32  	%r122, %r120, %r121;
	and.b32  	%r7, %r122, 63;
	bar.sync 	0;
	shl.b32 	%r123, %r7, 2;
	add.s32 	%r125, %r15, %r123;
	atom.shared.add.u32 	%r8, [%r125], 1;
	shr.s32 	%r126, %r8, 31;
	shr.u32 	%r127, %r126, 28;
	add.s32 	%r128, %r8, %r127;
	and.b32  	%r129, %r128, -16;
	sub.s32 	%r9, %r8, %r129;
	and.b64  	%rd118, %rd20, 2305843005455597567;
	shl.b32 	%r130, %r9, 3;
	shl.b32 	%r131, %r7, 7;
	mov.u32 	%r132, _ZZ12FluffySeed2AE3tmp;
	add.s32 	%r133, %r132, %r131;
	add.s32 	%r134, %r133, %r130;
	st.shared.u64 	[%r134], %rd118;
	bar.sync 	0;
	setp.gt.s32	%p4, %r8, 0;
	and.b32  	%r135, %r9, -9;
	setp.eq.s32	%p5, %r135, 0;
	and.pred  	%p6, %p4, %p5;
	@!%p6 bra 	BB0_8;
	bra.uni 	BB0_7;

BB0_7:
	mul.wide.u32 	%rd119, %r7, 4;
	add.s64 	%rd120, %rd2, %rd119;
	mov.u32 	%r136, 8;
	atom.global.add.u32 	%r137, [%rd120], 8;
	mov.u32 	%r138, 8454136;
	min.s32 	%r139, %r137, %r138;
	mul.wide.u32 	%rd121, %r7, 8454144;
	cvt.s64.s32	%rd122, %r139;
	add.s64 	%rd123, %rd122, %rd121;
	shr.s64 	%rd124, %rd123, 63;
	shr.u64 	%rd125, %rd124, 62;
	add.s64 	%rd126, %rd123, %rd125;
	shr.s64 	%rd127, %rd126, 2;
	cvt.s64.s32 	%rd128, %rd127;
	sub.s32 	%r140, %r136, %r9;
	shl.b32 	%r144, %r140, 3;
	add.s32 	%r145, %r133, %r144;
	mov.u32 	%r146, 9;
	sub.s32 	%r147, %r146, %r9;
	shl.b32 	%r148, %r147, 3;
	add.s32 	%r149, %r133, %r148;
	mov.u32 	%r150, 10;
	sub.s32 	%r151, %r150, %r9;
	shl.b32 	%r152, %r151, 3;
	add.s32 	%r153, %r133, %r152;
	mov.u32 	%r154, 11;
	sub.s32 	%r155, %r154, %r9;
	shl.b32 	%r156, %r155, 3;
	add.s32 	%r157, %r133, %r156;
	shl.b64 	%rd129, %rd128, 5;
	add.s64 	%rd130, %rd1, %rd129;
	atom.shared.exch.b64 	%rd131, [%r145], 0;
	atom.shared.exch.b64 	%rd132, [%r149], 0;
	atom.shared.exch.b64 	%rd133, [%r153], 0;
	atom.shared.exch.b64 	%rd134, [%r157], 0;
	st.global.v2.u64 	[%rd130], {%rd131, %rd132};
	st.global.v2.u64 	[%rd130+16], {%rd133, %rd134};
	add.s64 	%rd135, %rd127, 1;
	cvt.s64.s32 	%rd136, %rd135;
	mov.u32 	%r158, 12;
	sub.s32 	%r159, %r158, %r9;
	shl.b32 	%r160, %r159, 3;
	add.s32 	%r161, %r133, %r160;
	mov.u32 	%r162, 13;
	sub.s32 	%r163, %r162, %r9;
	shl.b32 	%r164, %r163, 3;
	add.s32 	%r165, %r133, %r164;
	mov.u32 	%r166, 14;
	sub.s32 	%r167, %r166, %r9;
	shl.b32 	%r168, %r167, 3;
	add.s32 	%r169, %r133, %r168;
	mov.u32 	%r170, 15;
	sub.s32 	%r171, %r170, %r9;
	shl.b32 	%r172, %r171, 3;
	add.s32 	%r173, %r133, %r172;
	shl.b64 	%rd137, %rd136, 5;
	add.s64 	%rd138, %rd1, %rd137;
	atom.shared.exch.b64 	%rd139, [%r161], 0;
	atom.shared.exch.b64 	%rd140, [%r165], 0;
	atom.shared.exch.b64 	%rd141, [%r169], 0;
	atom.shared.exch.b64 	%rd142, [%r173], 0;
	st.global.v2.u64 	[%rd138], {%rd139, %rd140};
	st.global.v2.u64 	[%rd138+16], {%rd141, %rd142};

BB0_8:
	setp.eq.s16	%p7, %rs4, 62;
	mov.u64 	%rd204, %rd18;
	@%p7 bra 	BB0_10;

	ld.local.u64 	%rd143, [%rd19+8];
	xor.b64  	%rd204, %rd143, %rd18;

BB0_10:
	cvt.u32.u64	%r174, %rd204;
	and.b32  	%r10, %r174, 63;
	bar.sync 	0;
	shl.b32 	%r175, %r10, 2;
	add.s32 	%r177, %r15, %r175;
	atom.shared.add.u32 	%r11, [%r177], 1;
	shr.s32 	%r178, %r11, 31;
	shr.u32 	%r179, %r178, 28;
	add.s32 	%r180, %r11, %r179;
	and.b32  	%r181, %r180, -16;
	sub.s32 	%r12, %r11, %r181;
	shl.b32 	%r182, %r12, 3;
	shl.b32 	%r183, %r10, 7;
	add.s32 	%r185, %r132, %r183;
	add.s32 	%r186, %r185, %r182;
	and.b64  	%rd144, %rd204, 2305843005455597567;
	st.shared.u64 	[%r186], %rd144;
	bar.sync 	0;
	setp.gt.s32	%p8, %r11, 0;
	and.b32  	%r187, %r12, -9;
	setp.eq.s32	%p9, %r187, 0;
	and.pred  	%p10, %p8, %p9;
	@!%p10 bra 	BB0_12;
	bra.uni 	BB0_11;

BB0_11:
	mul.wide.u32 	%rd145, %r10, 4;
	add.s64 	%rd146, %rd2, %rd145;
	mov.u32 	%r188, 8;
	atom.global.add.u32 	%r189, [%rd146], 8;
	mov.u32 	%r190, 8454136;
	min.s32 	%r191, %r189, %r190;
	mul.wide.u32 	%rd147, %r10, 8454144;
	cvt.s64.s32	%rd148, %r191;
	add.s64 	%rd149, %rd148, %rd147;
	shr.s64 	%rd150, %rd149, 63;
	shr.u64 	%rd151, %rd150, 62;
	add.s64 	%rd152, %rd149, %rd151;
	shr.s64 	%rd153, %rd152, 2;
	cvt.s64.s32 	%rd154, %rd153;
	sub.s32 	%r192, %r188, %r12;
	shl.b32 	%r196, %r192, 3;
	add.s32 	%r197, %r185, %r196;
	mov.u32 	%r198, 9;
	sub.s32 	%r199, %r198, %r12;
	shl.b32 	%r200, %r199, 3;
	add.s32 	%r201, %r185, %r200;
	mov.u32 	%r202, 10;
	sub.s32 	%r203, %r202, %r12;
	shl.b32 	%r204, %r203, 3;
	add.s32 	%r205, %r185, %r204;
	mov.u32 	%r206, 11;
	sub.s32 	%r207, %r206, %r12;
	shl.b32 	%r208, %r207, 3;
	add.s32 	%r209, %r185, %r208;
	shl.b64 	%rd155, %rd154, 5;
	add.s64 	%rd156, %rd1, %rd155;
	atom.shared.exch.b64 	%rd157, [%r197], 0;
	atom.shared.exch.b64 	%rd158, [%r201], 0;
	atom.shared.exch.b64 	%rd159, [%r205], 0;
	atom.shared.exch.b64 	%rd160, [%r209], 0;
	st.global.v2.u64 	[%rd156], {%rd157, %rd158};
	st.global.v2.u64 	[%rd156+16], {%rd159, %rd160};
	add.s64 	%rd161, %rd153, 1;
	cvt.s64.s32 	%rd162, %rd161;
	mov.u32 	%r210, 12;
	sub.s32 	%r211, %r210, %r12;
	shl.b32 	%r212, %r211, 3;
	add.s32 	%r213, %r185, %r212;
	mov.u32 	%r214, 13;
	sub.s32 	%r215, %r214, %r12;
	shl.b32 	%r216, %r215, 3;
	add.s32 	%r217, %r185, %r216;
	mov.u32 	%r218, 14;
	sub.s32 	%r219, %r218, %r12;
	shl.b32 	%r220, %r219, 3;
	add.s32 	%r221, %r185, %r220;
	mov.u32 	%r222, 15;
	sub.s32 	%r223, %r222, %r12;
	shl.b32 	%r224, %r223, 3;
	add.s32 	%r225, %r185, %r224;
	shl.b64 	%rd163, %rd162, 5;
	add.s64 	%rd164, %rd1, %rd163;
	atom.shared.exch.b64 	%rd165, [%r213], 0;
	atom.shared.exch.b64 	%rd166, [%r217], 0;
	atom.shared.exch.b64 	%rd167, [%r221], 0;
	atom.shared.exch.b64 	%rd168, [%r225], 0;
	st.global.v2.u64 	[%rd164], {%rd165, %rd166};
	st.global.v2.u64 	[%rd164+16], {%rd167, %rd168};

BB0_12:
	add.s16 	%rs4, %rs4, 2;
	setp.ne.s16	%p11, %rs4, 64;
	@%p11 bra 	BB0_6;

	add.s32 	%r248, %r248, 64;
	setp.lt.s32	%p12, %r248, 2048;
	@%p12 bra 	BB0_3;

	mov.u32 	%r241, %tid.x;
	setp.lt.s32	%p1, %r241, 64;
	bar.sync 	0;
	@!%p1 bra 	BB0_16;
	bra.uni 	BB0_15;

BB0_15:
	mov.u32 	%r245, %tid.x;
	shl.b32 	%r244, %r245, 2;
	mov.u32 	%r243, _ZZ12FluffySeed2AE8counters;
	add.s32 	%r242, %r243, %r244;
	ld.shared.u32 	%r226, [%r242];
	shr.s32 	%r227, %r226, 31;
	shr.u32 	%r228, %r227, 28;
	add.s32 	%r229, %r226, %r228;
	and.b32  	%r230, %r229, -16;
	sub.s32 	%r231, %r226, %r230;
	setp.gt.s32	%p13, %r231, 7;
	selp.b32	%r232, 8, 0, %p13;
	mul.wide.s32 	%rd169, %r245, 4;
	add.s64 	%rd170, %rd2, %rd169;
	atom.global.add.u32 	%r233, [%rd170], 8;
	mov.u32 	%r234, 8454136;
	min.s32 	%r235, %r233, %r234;
	mul.wide.s32 	%rd171, %r245, 8454144;
	cvt.s64.s32	%rd172, %r235;
	add.s64 	%rd173, %rd172, %rd171;
	shr.s64 	%rd174, %rd173, 63;
	shr.u64 	%rd175, %rd174, 62;
	add.s64 	%rd176, %rd173, %rd175;
	shr.s64 	%rd177, %rd176, 2;
	cvt.s64.s32 	%rd178, %rd177;
	shl.b32 	%r236, %r245, 7;
	add.s32 	%r238, %r132, %r236;
	shl.b32 	%r239, %r232, 3;
	add.s32 	%r240, %r238, %r239;
	shl.b64 	%rd179, %rd178, 5;
	add.s64 	%rd180, %rd1, %rd179;
	ld.shared.u64 	%rd181, [%r240];
	ld.shared.u64 	%rd182, [%r240+8];
	ld.shared.u64 	%rd183, [%r240+24];
	ld.shared.u64 	%rd184, [%r240+16];
	ld.shared.u64 	%rd185, [%r240+32];
	ld.shared.u64 	%rd186, [%r240+40];
	ld.shared.u64 	%rd187, [%r240+48];
	ld.shared.u64 	%rd188, [%r240+56];
	st.global.v2.u64 	[%rd180], {%rd181, %rd182};
	st.global.v2.u64 	[%rd180+16], {%rd184, %rd183};
	add.s64 	%rd189, %rd177, 1;
	cvt.s64.s32 	%rd190, %rd189;
	shl.b64 	%rd191, %rd190, 5;
	add.s64 	%rd192, %rd1, %rd191;
	st.global.v2.u64 	[%rd192], {%rd185, %rd186};
	st.global.v2.u64 	[%rd192+16], {%rd187, %rd188};

BB0_16:
	ret;
}

	// .globl	FluffySeed2B
.visible .entry FluffySeed2B(
	.param .u64 FluffySeed2B_param_0,
	.param .u64 FluffySeed2B_param_1,
	.param .u64 FluffySeed2B_param_2,
	.param .u64 FluffySeed2B_param_3,
	.param .u32 FluffySeed2B_param_4
)
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<189>;
	.reg .b64 	%rd<115>;
	// demoted variable
	.shared .align 8 .b8 _ZZ12FluffySeed2BE3tmp[8192];
	// demoted variable
	.shared .align 4 .b8 _ZZ12FluffySeed2BE8counters[256];

	ld.param.u64 	%rd2, [FluffySeed2B_param_0];
	ld.param.u64 	%rd3, [FluffySeed2B_param_1];
	ld.param.u64 	%rd4, [FluffySeed2B_param_2];
	ld.param.u64 	%rd5, [FluffySeed2B_param_3];
	ld.param.u32 	%r22, [FluffySeed2B_param_4];
	mov.u32 	%r23, %tid.x;
	setp.gt.s32	%p4, %r23, 63;
	@%p4 bra 	BB1_2;

	shl.b32 	%r25, %r23, 2;
	mov.u32 	%r26, _ZZ12FluffySeed2BE8counters;
	add.s32 	%r27, %r26, %r25;
	mov.u32 	%r28, 0;
	st.shared.u32 	[%r27], %r28;

BB1_2:
	bar.sync 	0;
	mov.u32 	%r30, %ctaid.x;
	shr.s32 	%r31, %r30, 31;
	shr.u32 	%r32, %r31, 27;
	add.s32 	%r33, %r30, %r32;
	shr.s32 	%r1, %r33, 5;
	and.b32  	%r34, %r33, -32;
	sub.s32 	%r35, %r30, %r34;
	add.s32 	%r36, %r1, %r22;
	cvta.to.global.u64 	%rd6, %rd4;
	mul.wide.s32 	%rd7, %r36, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.u32 	%r37, [%rd8];
	mov.u32 	%r38, 8454144;
	min.s32 	%r2, %r37, %r38;
	mad.lo.s32 	%r183, %r35, 264192, %r23;
	mov.u32 	%r184, -2064;
	cvta.to.global.u64 	%rd14, %rd2;

BB1_3:
	mul.wide.s32 	%rd9, %r1, 8454144;
	mul.lo.s32 	%r40, %r22, 8454144;
	cvt.s64.s32	%rd10, %r40;
	add.s64 	%rd11, %rd9, %rd10;
	cvt.s64.s32	%rd12, %r183;
	add.s64 	%rd13, %rd11, %rd12;
	shl.b64 	%rd15, %rd13, 3;
	add.s64 	%rd1, %rd14, %rd15;
	ld.global.v2.u32 	{%r41, %r42}, [%rd1];
	or.b32  	%r43, %r41, %r42;
	setp.eq.s32	%p5, %r43, 0;
	setp.ge.s32	%p6, %r183, %r2;
	or.pred  	%p1, %p5, %p6;
	bfe.u32 	%r8, %r41, 6, 6;
	bar.sync 	0;
	mov.u32 	%r185, 0;
	mov.u32 	%r186, %r185;
	@%p1 bra 	BB1_5;

	shl.b32 	%r46, %r8, 2;
	mov.u32 	%r47, _ZZ12FluffySeed2BE8counters;
	add.s32 	%r48, %r47, %r46;
	atom.shared.add.u32 	%r185, [%r48], 1;
	shr.s32 	%r49, %r185, 31;
	shr.u32 	%r50, %r49, 28;
	add.s32 	%r51, %r185, %r50;
	and.b32  	%r52, %r51, -16;
	sub.s32 	%r186, %r185, %r52;
	cvt.u64.u32	%rd16, %r42;
	cvt.u64.u32	%rd17, %r41;
	bfi.b64 	%rd18, %rd16, %rd17, 32, 32;
	shl.b32 	%r53, %r186, 3;
	shl.b32 	%r54, %r8, 7;
	mov.u32 	%r55, _ZZ12FluffySeed2BE3tmp;
	add.s32 	%r56, %r55, %r54;
	add.s32 	%r57, %r56, %r53;
	st.shared.u64 	[%r57], %rd18;

BB1_5:
	bar.sync 	0;
	and.b32  	%r58, %r186, -9;
	setp.eq.s32	%p7, %r58, 0;
	setp.gt.s32	%p8, %r185, 0;
	and.pred  	%p9, %p8, %p7;
	@!%p9 bra 	BB1_7;
	bra.uni 	BB1_6;

BB1_6:
	cvt.u64.u32	%rd19, %r8;
	shl.b32 	%r59, %r1, 6;
	cvt.s64.s32	%rd20, %r59;
	shl.b32 	%r60, %r22, 6;
	cvt.s64.s32	%rd21, %r60;
	add.s64 	%rd22, %rd20, %rd21;
	add.s64 	%rd23, %rd22, %rd19;
	cvta.to.global.u64 	%rd24, %rd5;
	shl.b64 	%rd25, %rd23, 2;
	add.s64 	%rd26, %rd24, %rd25;
	mov.u32 	%r61, 8;
	atom.global.add.u32 	%r62, [%rd26], 8;
	mov.u32 	%r63, 132088;
	min.s32 	%r64, %r62, %r63;
	add.s32 	%r65, %r8, %r59;
	mul.wide.s32 	%rd27, %r65, 132096;
	cvt.s64.s32	%rd28, %r64;
	add.s64 	%rd29, %rd28, %rd27;
	shr.s64 	%rd30, %rd29, 63;
	shr.u64 	%rd31, %rd30, 62;
	add.s64 	%rd32, %rd29, %rd31;
	shr.s64 	%rd33, %rd32, 2;
	cvt.s64.s32 	%rd34, %rd33;
	sub.s32 	%r66, %r61, %r186;
	shl.b32 	%r67, %r8, 7;
	mov.u32 	%r68, _ZZ12FluffySeed2BE3tmp;
	add.s32 	%r69, %r68, %r67;
	shl.b32 	%r70, %r66, 3;
	add.s32 	%r71, %r69, %r70;
	mov.u32 	%r72, 9;
	sub.s32 	%r73, %r72, %r186;
	shl.b32 	%r74, %r73, 3;
	add.s32 	%r75, %r69, %r74;
	mov.u32 	%r76, 10;
	sub.s32 	%r77, %r76, %r186;
	shl.b32 	%r78, %r77, 3;
	add.s32 	%r79, %r69, %r78;
	mov.u32 	%r80, 11;
	sub.s32 	%r81, %r80, %r186;
	shl.b32 	%r82, %r81, 3;
	add.s32 	%r83, %r69, %r82;
	cvta.to.global.u64 	%rd35, %rd3;
	shl.b64 	%rd36, %rd34, 5;
	add.s64 	%rd37, %rd35, %rd36;
	atom.shared.exch.b64 	%rd38, [%r71], 0;
	atom.shared.exch.b64 	%rd39, [%r75], 0;
	atom.shared.exch.b64 	%rd40, [%r79], 0;
	atom.shared.exch.b64 	%rd41, [%r83], 0;
	st.global.v2.u64 	[%rd37], {%rd38, %rd39};
	st.global.v2.u64 	[%rd37+16], {%rd40, %rd41};
	add.s64 	%rd42, %rd33, 1;
	cvt.s64.s32 	%rd43, %rd42;
	mov.u32 	%r84, 12;
	sub.s32 	%r85, %r84, %r186;
	shl.b32 	%r86, %r85, 3;
	add.s32 	%r87, %r69, %r86;
	mov.u32 	%r88, 13;
	sub.s32 	%r89, %r88, %r186;
	shl.b32 	%r90, %r89, 3;
	add.s32 	%r91, %r69, %r90;
	mov.u32 	%r92, 14;
	sub.s32 	%r93, %r92, %r186;
	shl.b32 	%r94, %r93, 3;
	add.s32 	%r95, %r69, %r94;
	mov.u32 	%r96, 15;
	sub.s32 	%r97, %r96, %r186;
	shl.b32 	%r98, %r97, 3;
	add.s32 	%r99, %r69, %r98;
	shl.b64 	%rd44, %rd43, 5;
	add.s64 	%rd45, %rd35, %rd44;
	atom.shared.exch.b64 	%rd46, [%r87], 0;
	atom.shared.exch.b64 	%rd47, [%r91], 0;
	atom.shared.exch.b64 	%rd48, [%r95], 0;
	atom.shared.exch.b64 	%rd49, [%r99], 0;
	st.global.v2.u64 	[%rd45], {%rd46, %rd47};
	st.global.v2.u64 	[%rd45+16], {%rd48, %rd49};

BB1_7:
	ld.global.v2.u32 	{%r100, %r101}, [%rd1+1024];
	or.b32  	%r102, %r100, %r101;
	setp.eq.s32	%p10, %r102, 0;
	add.s32 	%r103, %r183, 128;
	setp.ge.s32	%p11, %r103, %r2;
	or.pred  	%p2, %p10, %p11;
	bfe.u32 	%r15, %r100, 6, 6;
	bar.sync 	0;
	mov.u32 	%r187, 0;
	mov.u32 	%r188, %r187;
	@%p2 bra 	BB1_9;

	shl.b32 	%r106, %r15, 2;
	mov.u32 	%r107, _ZZ12FluffySeed2BE8counters;
	add.s32 	%r108, %r107, %r106;
	atom.shared.add.u32 	%r187, [%r108], 1;
	shr.s32 	%r109, %r187, 31;
	shr.u32 	%r110, %r109, 28;
	add.s32 	%r111, %r187, %r110;
	and.b32  	%r112, %r111, -16;
	sub.s32 	%r188, %r187, %r112;
	cvt.u64.u32	%rd50, %r101;
	cvt.u64.u32	%rd51, %r100;
	bfi.b64 	%rd52, %rd50, %rd51, 32, 32;
	shl.b32 	%r113, %r188, 3;
	shl.b32 	%r114, %r15, 7;
	mov.u32 	%r115, _ZZ12FluffySeed2BE3tmp;
	add.s32 	%r116, %r115, %r114;
	add.s32 	%r117, %r116, %r113;
	st.shared.u64 	[%r117], %rd52;

BB1_9:
	bar.sync 	0;
	and.b32  	%r118, %r188, -9;
	setp.eq.s32	%p12, %r118, 0;
	setp.gt.s32	%p13, %r187, 0;
	and.pred  	%p14, %p13, %p12;
	@!%p14 bra 	BB1_11;
	bra.uni 	BB1_10;

BB1_10:
	cvt.u64.u32	%rd53, %r15;
	shl.b32 	%r119, %r1, 6;
	cvt.s64.s32	%rd54, %r119;
	shl.b32 	%r120, %r22, 6;
	cvt.s64.s32	%rd55, %r120;
	add.s64 	%rd56, %rd54, %rd55;
	add.s64 	%rd57, %rd56, %rd53;
	cvta.to.global.u64 	%rd58, %rd5;
	shl.b64 	%rd59, %rd57, 2;
	add.s64 	%rd60, %rd58, %rd59;
	mov.u32 	%r121, 8;
	atom.global.add.u32 	%r122, [%rd60], 8;
	mov.u32 	%r123, 132088;
	min.s32 	%r124, %r122, %r123;
	add.s32 	%r125, %r15, %r119;
	mul.wide.s32 	%rd61, %r125, 132096;
	cvt.s64.s32	%rd62, %r124;
	add.s64 	%rd63, %rd62, %rd61;
	shr.s64 	%rd64, %rd63, 63;
	shr.u64 	%rd65, %rd64, 62;
	add.s64 	%rd66, %rd63, %rd65;
	shr.s64 	%rd67, %rd66, 2;
	cvt.s64.s32 	%rd68, %rd67;
	sub.s32 	%r126, %r121, %r188;
	shl.b32 	%r127, %r15, 7;
	mov.u32 	%r128, _ZZ12FluffySeed2BE3tmp;
	add.s32 	%r129, %r128, %r127;
	shl.b32 	%r130, %r126, 3;
	add.s32 	%r131, %r129, %r130;
	mov.u32 	%r132, 9;
	sub.s32 	%r133, %r132, %r188;
	shl.b32 	%r134, %r133, 3;
	add.s32 	%r135, %r129, %r134;
	mov.u32 	%r136, 10;
	sub.s32 	%r137, %r136, %r188;
	shl.b32 	%r138, %r137, 3;
	add.s32 	%r139, %r129, %r138;
	mov.u32 	%r140, 11;
	sub.s32 	%r141, %r140, %r188;
	shl.b32 	%r142, %r141, 3;
	add.s32 	%r143, %r129, %r142;
	cvta.to.global.u64 	%rd69, %rd3;
	shl.b64 	%rd70, %rd68, 5;
	add.s64 	%rd71, %rd69, %rd70;
	atom.shared.exch.b64 	%rd72, [%r131], 0;
	atom.shared.exch.b64 	%rd73, [%r135], 0;
	atom.shared.exch.b64 	%rd74, [%r139], 0;
	atom.shared.exch.b64 	%rd75, [%r143], 0;
	st.global.v2.u64 	[%rd71], {%rd72, %rd73};
	st.global.v2.u64 	[%rd71+16], {%rd74, %rd75};
	add.s64 	%rd76, %rd67, 1;
	cvt.s64.s32 	%rd77, %rd76;
	mov.u32 	%r144, 12;
	sub.s32 	%r145, %r144, %r188;
	shl.b32 	%r146, %r145, 3;
	add.s32 	%r147, %r129, %r146;
	mov.u32 	%r148, 13;
	sub.s32 	%r149, %r148, %r188;
	shl.b32 	%r150, %r149, 3;
	add.s32 	%r151, %r129, %r150;
	mov.u32 	%r152, 14;
	sub.s32 	%r153, %r152, %r188;
	shl.b32 	%r154, %r153, 3;
	add.s32 	%r155, %r129, %r154;
	mov.u32 	%r156, 15;
	sub.s32 	%r157, %r156, %r188;
	shl.b32 	%r158, %r157, 3;
	add.s32 	%r159, %r129, %r158;
	shl.b64 	%rd78, %rd77, 5;
	add.s64 	%rd79, %rd69, %rd78;
	atom.shared.exch.b64 	%rd80, [%r147], 0;
	atom.shared.exch.b64 	%rd81, [%r151], 0;
	atom.shared.exch.b64 	%rd82, [%r155], 0;
	atom.shared.exch.b64 	%rd83, [%r159], 0;
	st.global.v2.u64 	[%rd79], {%rd80, %rd81};
	st.global.v2.u64 	[%rd79+16], {%rd82, %rd83};

BB1_11:
	add.s32 	%r184, %r184, 2;
	add.s32 	%r183, %r183, 256;
	setp.ne.s32	%p15, %r184, 0;
	@%p15 bra 	BB1_3;

	setp.lt.s32	%p3, %r23, 64;
	bar.sync 	0;
	@!%p3 bra 	BB1_14;
	bra.uni 	BB1_13;

BB1_13:
	shl.b32 	%r162, %r23, 2;
	mov.u32 	%r163, _ZZ12FluffySeed2BE8counters;
	add.s32 	%r164, %r163, %r162;
	ld.shared.u32 	%r165, [%r164];
	shr.s32 	%r166, %r165, 31;
	shr.u32 	%r167, %r166, 28;
	add.s32 	%r168, %r165, %r167;
	and.b32  	%r169, %r168, -16;
	sub.s32 	%r170, %r165, %r169;
	setp.gt.s32	%p16, %r170, 7;
	selp.b32	%r171, 8, 0, %p16;
	cvt.s64.s32	%rd84, %r23;
	shl.b32 	%r172, %r1, 6;
	cvt.s64.s32	%rd85, %r172;
	shl.b32 	%r173, %r22, 6;
	cvt.s64.s32	%rd86, %r173;
	add.s64 	%rd87, %rd85, %rd86;
	add.s64 	%rd88, %rd87, %rd84;
	cvta.to.global.u64 	%rd89, %rd5;
	shl.b64 	%rd90, %rd88, 2;
	add.s64 	%rd91, %rd89, %rd90;
	atom.global.add.u32 	%r174, [%rd91], 8;
	mov.u32 	%r175, 132088;
	min.s32 	%r176, %r174, %r175;
	add.s32 	%r177, %r172, %r23;
	mul.wide.s32 	%rd92, %r177, 132096;
	cvt.s64.s32	%rd93, %r176;
	add.s64 	%rd94, %rd93, %rd92;
	shr.s64 	%rd95, %rd94, 63;
	shr.u64 	%rd96, %rd95, 62;
	add.s64 	%rd97, %rd94, %rd96;
	shr.s64 	%rd98, %rd97, 2;
	cvt.s64.s32 	%rd99, %rd98;
	shl.b32 	%r178, %r171, 3;
	shl.b32 	%r179, %r23, 7;
	mov.u32 	%r180, _ZZ12FluffySeed2BE3tmp;
	add.s32 	%r181, %r180, %r179;
	add.s32 	%r182, %r181, %r178;
	cvta.to.global.u64 	%rd100, %rd3;
	shl.b64 	%rd101, %rd99, 5;
	add.s64 	%rd102, %rd100, %rd101;
	ld.shared.u64 	%rd103, [%r182];
	ld.shared.u64 	%rd104, [%r182+8];
	ld.shared.u64 	%rd105, [%r182+24];
	ld.shared.u64 	%rd106, [%r182+16];
	ld.shared.u64 	%rd107, [%r182+32];
	ld.shared.u64 	%rd108, [%r182+40];
	ld.shared.u64 	%rd109, [%r182+48];
	ld.shared.u64 	%rd110, [%r182+56];
	st.global.v2.u64 	[%rd102], {%rd103, %rd104};
	st.global.v2.u64 	[%rd102+16], {%rd106, %rd105};
	add.s64 	%rd111, %rd98, 1;
	cvt.s64.s32 	%rd112, %rd111;
	shl.b64 	%rd113, %rd112, 5;
	add.s64 	%rd114, %rd100, %rd113;
	st.global.v2.u64 	[%rd114], {%rd107, %rd108};
	st.global.v2.u64 	[%rd114+16], {%rd109, %rd110};

BB1_14:
	ret;
}

	// .globl	FluffyRound
.visible .entry FluffyRound(
	.param .u64 FluffyRound_param_0,
	.param .u64 FluffyRound_param_1,
	.param .u64 FluffyRound_param_2,
	.param .u64 FluffyRound_param_3,
	.param .u32 FluffyRound_param_4,
	.param .u32 FluffyRound_param_5
)
{
	.reg .pred 	%p<59>;
	.reg .b32 	%r<392>;
	.reg .b64 	%rd<76>;
	// demoted variable
	.shared .align 4 .b8 _ZZ11FluffyRoundE9ecounters[32768];

	ld.param.u64 	%rd2, [FluffyRound_param_0];
	ld.param.u64 	%rd3, [FluffyRound_param_1];
	ld.param.u64 	%rd5, [FluffyRound_param_2];
	ld.param.u64 	%rd4, [FluffyRound_param_3];
	ld.param.u32 	%r67, [FluffyRound_param_4];
	ld.param.u32 	%r68, [FluffyRound_param_5];
	cvta.to.global.u64 	%rd6, %rd5;
	mov.u32 	%r69, %ctaid.x;
	mul.wide.s32 	%rd7, %r69, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.u32 	%r70, [%rd8];
	min.s32 	%r1, %r70, %r67;
	add.s32 	%r2, %r1, 512;
	mov.u32 	%r3, %tid.x;
	shl.b32 	%r71, %r3, 2;
	mov.u32 	%r72, _ZZ11FluffyRoundE9ecounters;
	add.s32 	%r73, %r72, %r71;
	mov.u32 	%r388, 0;
	st.shared.u32 	[%r73], %r388;
	st.shared.u32 	[%r73+2048], %r388;
	st.shared.u32 	[%r73+4096], %r388;
	st.shared.u32 	[%r73+6144], %r388;
	st.shared.u32 	[%r73+8192], %r388;
	st.shared.u32 	[%r73+10240], %r388;
	st.shared.u32 	[%r73+12288], %r388;
	st.shared.u32 	[%r73+14336], %r388;
	st.shared.u32 	[%r73+16384], %r388;
	st.shared.u32 	[%r73+18432], %r388;
	st.shared.u32 	[%r73+20480], %r388;
	st.shared.u32 	[%r73+22528], %r388;
	st.shared.u32 	[%r73+24576], %r388;
	st.shared.u32 	[%r73+26624], %r388;
	st.shared.u32 	[%r73+28672], %r388;
	st.shared.u32 	[%r73+30720], %r388;
	shr.s32 	%r75, %r2, 31;
	shr.u32 	%r76, %r75, 23;
	add.s32 	%r77, %r2, %r76;
	shr.s32 	%r4, %r77, 9;
	bar.sync 	0;
	mov.pred 	%p58, 0;
	setp.lt.s32	%p5, %r2, 512;
	@%p5 bra 	BB2_37;

	mov.u32 	%r82, 1;
	max.s32 	%r5, %r4, %r82;
	and.b32  	%r81, %r5, 3;
	mov.u32 	%r384, 0;
	setp.eq.s32	%p6, %r81, 0;
	@%p6 bra 	BB2_19;

	setp.eq.s32	%p7, %r81, 1;
	@%p7 bra 	BB2_14;

	setp.eq.s32	%p8, %r81, 2;
	@%p8 bra 	BB2_9;

	setp.ge.s32	%p9, %r3, %r1;
	@%p9 bra 	BB2_5;

	mad.lo.s32 	%r86, %r69, %r67, %r3;
	cvta.to.global.u64 	%rd9, %rd2;
	mul.wide.s32 	%rd10, %r86, 8;
	add.s64 	%rd11, %rd9, %rd10;
	ld.global.v2.u32 	{%r87, %r88}, [%rd11];
	or.b32  	%r90, %r87, %r88;
	setp.eq.s32	%p10, %r90, 0;
	mov.u32 	%r384, %r82;
	@%p10 bra 	BB2_9;

	and.b32  	%r92, %r87, 536866816;
	bfe.u32 	%r7, %r87, 17, 12;
	bfe.u32 	%r93, %r92, 12, 5;
	mov.u32 	%r384, 1;
	shl.b32 	%r8, %r384, %r93;
	shl.b32 	%r94, %r7, 2;
	add.s32 	%r96, %r72, %r94;
	atom.shared.or.b32 	%r97, [%r96], %r8;
	and.b32  	%r98, %r97, %r8;
	setp.eq.s32	%p11, %r98, 0;
	@%p11 bra 	BB2_9;

	add.s32 	%r102, %r94, %r72;
	add.s32 	%r103, %r102, 16384;
	atom.shared.or.b32 	%r104, [%r103], %r8;
	bra.uni 	BB2_9;

BB2_5:
	mov.u32 	%r384, %r82;

BB2_9:
	shl.b32 	%r105, %r384, 9;
	add.s32 	%r10, %r105, %r3;
	setp.ge.s32	%p12, %r10, %r1;
	@%p12 bra 	BB2_13;

	mad.lo.s32 	%r107, %r69, %r67, %r10;
	cvta.to.global.u64 	%rd12, %rd2;
	mul.wide.s32 	%rd13, %r107, 8;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.v2.u32 	{%r108, %r109}, [%rd14];
	or.b32  	%r111, %r108, %r109;
	setp.eq.s32	%p13, %r111, 0;
	@%p13 bra 	BB2_13;

	and.b32  	%r112, %r108, 536866816;
	bfe.u32 	%r12, %r108, 17, 12;
	bfe.u32 	%r113, %r112, 12, 5;
	mov.u32 	%r114, 1;
	shl.b32 	%r13, %r114, %r113;
	shl.b32 	%r115, %r12, 2;
	add.s32 	%r117, %r72, %r115;
	atom.shared.or.b32 	%r118, [%r117], %r13;
	and.b32  	%r119, %r118, %r13;
	setp.eq.s32	%p14, %r119, 0;
	@%p14 bra 	BB2_13;

	add.s32 	%r122, %r115, %r72;
	add.s32 	%r123, %r122, 16384;
	atom.shared.or.b32 	%r124, [%r123], %r13;

BB2_13:
	add.s32 	%r384, %r384, 1;

BB2_14:
	shl.b32 	%r126, %r384, 9;
	add.s32 	%r16, %r126, %r3;
	setp.ge.s32	%p15, %r16, %r1;
	@%p15 bra 	BB2_18;

	mad.lo.s32 	%r128, %r69, %r67, %r16;
	cvta.to.global.u64 	%rd15, %rd2;
	mul.wide.s32 	%rd16, %r128, 8;
	add.s64 	%rd17, %rd15, %rd16;
	ld.global.v2.u32 	{%r129, %r130}, [%rd17];
	or.b32  	%r132, %r129, %r130;
	setp.eq.s32	%p16, %r132, 0;
	@%p16 bra 	BB2_18;

	and.b32  	%r133, %r129, 536866816;
	bfe.u32 	%r18, %r129, 17, 12;
	bfe.u32 	%r134, %r133, 12, 5;
	mov.u32 	%r135, 1;
	shl.b32 	%r19, %r135, %r134;
	shl.b32 	%r136, %r18, 2;
	add.s32 	%r138, %r72, %r136;
	atom.shared.or.b32 	%r139, [%r138], %r19;
	and.b32  	%r140, %r139, %r19;
	setp.eq.s32	%p17, %r140, 0;
	@%p17 bra 	BB2_18;

	add.s32 	%r143, %r136, %r72;
	add.s32 	%r144, %r143, 16384;
	atom.shared.or.b32 	%r145, [%r144], %r19;

BB2_18:
	add.s32 	%r384, %r384, 1;

BB2_19:
	setp.gt.s32	%p58, %r2, 511;
	setp.lt.u32	%p18, %r5, 4;
	@%p18 bra 	BB2_37;

BB2_20:
	shl.b32 	%r147, %r384, 9;
	add.s32 	%r148, %r147, %r3;
	mad.lo.s32 	%r150, %r69, %r67, %r148;
	cvta.to.global.u64 	%rd18, %rd2;
	mul.wide.s32 	%rd19, %r150, 8;
	add.s64 	%rd1, %rd18, %rd19;
	setp.ge.s32	%p19, %r148, %r1;
	@%p19 bra 	BB2_24;

	ld.global.v2.u32 	{%r151, %r152}, [%rd1];
	or.b32  	%r154, %r151, %r152;
	setp.eq.s32	%p20, %r154, 0;
	@%p20 bra 	BB2_24;

	and.b32  	%r155, %r151, 536866816;
	bfe.u32 	%r25, %r151, 17, 12;
	bfe.u32 	%r156, %r155, 12, 5;
	mov.u32 	%r157, 1;
	shl.b32 	%r26, %r157, %r156;
	shl.b32 	%r158, %r25, 2;
	add.s32 	%r160, %r72, %r158;
	atom.shared.or.b32 	%r161, [%r160], %r26;
	and.b32  	%r162, %r161, %r26;
	setp.eq.s32	%p21, %r162, 0;
	@%p21 bra 	BB2_24;

	add.s32 	%r165, %r158, %r72;
	add.s32 	%r166, %r165, 16384;
	atom.shared.or.b32 	%r167, [%r166], %r26;

BB2_24:
	add.s32 	%r170, %r148, 512;
	setp.ge.s32	%p22, %r170, %r1;
	@%p22 bra 	BB2_28;

	ld.global.v2.u32 	{%r171, %r172}, [%rd1+4096];
	or.b32  	%r174, %r171, %r172;
	setp.eq.s32	%p23, %r174, 0;
	@%p23 bra 	BB2_28;

	and.b32  	%r175, %r171, 536866816;
	bfe.u32 	%r28, %r171, 17, 12;
	bfe.u32 	%r176, %r175, 12, 5;
	mov.u32 	%r177, 1;
	shl.b32 	%r29, %r177, %r176;
	shl.b32 	%r178, %r28, 2;
	add.s32 	%r180, %r72, %r178;
	atom.shared.or.b32 	%r181, [%r180], %r29;
	and.b32  	%r182, %r181, %r29;
	setp.eq.s32	%p24, %r182, 0;
	@%p24 bra 	BB2_28;

	add.s32 	%r185, %r178, %r72;
	add.s32 	%r186, %r185, 16384;
	atom.shared.or.b32 	%r187, [%r186], %r29;

BB2_28:
	add.s32 	%r190, %r148, 1024;
	setp.ge.s32	%p25, %r190, %r1;
	@%p25 bra 	BB2_32;

	ld.global.v2.u32 	{%r191, %r192}, [%rd1+8192];
	or.b32  	%r194, %r191, %r192;
	setp.eq.s32	%p26, %r194, 0;
	@%p26 bra 	BB2_32;

	and.b32  	%r195, %r191, 536866816;
	bfe.u32 	%r31, %r191, 17, 12;
	bfe.u32 	%r196, %r195, 12, 5;
	mov.u32 	%r197, 1;
	shl.b32 	%r32, %r197, %r196;
	shl.b32 	%r198, %r31, 2;
	add.s32 	%r200, %r72, %r198;
	atom.shared.or.b32 	%r201, [%r200], %r32;
	and.b32  	%r202, %r201, %r32;
	setp.eq.s32	%p27, %r202, 0;
	@%p27 bra 	BB2_32;

	add.s32 	%r205, %r198, %r72;
	add.s32 	%r206, %r205, 16384;
	atom.shared.or.b32 	%r207, [%r206], %r32;

BB2_32:
	add.s32 	%r210, %r148, 1536;
	setp.ge.s32	%p28, %r210, %r1;
	@%p28 bra 	BB2_36;

	ld.global.v2.u32 	{%r211, %r212}, [%rd1+12288];
	or.b32  	%r214, %r211, %r212;
	setp.eq.s32	%p29, %r214, 0;
	@%p29 bra 	BB2_36;

	and.b32  	%r215, %r211, 536866816;
	bfe.u32 	%r34, %r211, 17, 12;
	bfe.u32 	%r216, %r215, 12, 5;
	mov.u32 	%r217, 1;
	shl.b32 	%r35, %r217, %r216;
	shl.b32 	%r218, %r34, 2;
	add.s32 	%r220, %r72, %r218;
	atom.shared.or.b32 	%r221, [%r220], %r35;
	and.b32  	%r222, %r221, %r35;
	setp.eq.s32	%p30, %r222, 0;
	@%p30 bra 	BB2_36;

	add.s32 	%r225, %r218, %r72;
	add.s32 	%r226, %r225, 16384;
	atom.shared.or.b32 	%r227, [%r226], %r35;

BB2_36:
	add.s32 	%r384, %r384, 4;
	setp.lt.s32	%p31, %r384, %r4;
	@%p31 bra 	BB2_20;

BB2_37:
	bar.sync 	0;
	@!%p58 bra 	BB2_74;
	bra.uni 	BB2_38;

BB2_38:
	mul.lo.s32 	%r37, %r69, %r67;
	mov.u32 	%r234, 1;
	max.s32 	%r38, %r4, %r234;
	and.b32  	%r232, %r38, 3;
	setp.eq.s32	%p32, %r232, 0;
	@%p32 bra 	BB2_56;

	setp.eq.s32	%p33, %r232, 1;
	@%p33 bra 	BB2_51;

	setp.eq.s32	%p34, %r232, 2;
	@%p34 bra 	BB2_46;

	setp.ge.s32	%p35, %r3, %r1;
	@%p35 bra 	BB2_42;

	add.s32 	%r241, %r3, %r37;
	mul.wide.s32 	%rd21, %r241, 8;
	add.s64 	%rd20, %rd2, %rd21;
	// inline asm
	ld.global.nc.v2.u32 {%r237,%r238}, [%rd20];
	// inline asm
	or.b32  	%r242, %r237, %r238;
	setp.eq.s32	%p36, %r242, 0;
	mov.u32 	%r388, %r234;
	@%p36 bra 	BB2_46;

	and.b32  	%r244, %r237, 536866816;
	bfe.u32 	%r245, %r244, 12, 5;
	mov.u32 	%r388, 1;
	shl.b32 	%r246, %r388, %r245;
	bfe.u32 	%r247, %r237, 15, 14;
	and.b32  	%r248, %r247, 16380;
	add.s32 	%r250, %r248, %r72;
	ld.shared.u32 	%r251, [%r250+16384];
	and.b32  	%r252, %r251, %r246;
	setp.eq.s32	%p37, %r252, 0;
	@%p37 bra 	BB2_46;

	and.b32  	%r254, %r238, 4095;
	cvta.to.global.u64 	%rd22, %rd4;
	mul.wide.u32 	%rd23, %r254, 4;
	add.s64 	%rd24, %rd22, %rd23;
	atom.global.add.u32 	%r255, [%rd24], 1;
	add.s32 	%r256, %r68, -1;
	min.s32 	%r257, %r255, %r256;
	mad.lo.s32 	%r258, %r254, %r68, %r257;
	cvta.to.global.u64 	%rd25, %rd3;
	mul.wide.s32 	%rd26, %r258, 8;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.v2.u32 	[%rd27], {%r238, %r237};
	bra.uni 	BB2_46;

BB2_42:
	mov.u32 	%r388, %r234;

BB2_46:
	shl.b32 	%r260, %r388, 9;
	add.s32 	%r42, %r260, %r3;
	setp.ge.s32	%p38, %r42, %r1;
	@%p38 bra 	BB2_50;

	add.s32 	%r263, %r42, %r37;
	mul.wide.s32 	%rd29, %r263, 8;
	add.s64 	%rd28, %rd2, %rd29;
	// inline asm
	ld.global.nc.v2.u32 {%r261,%r262}, [%rd28];
	// inline asm
	or.b32  	%r264, %r261, %r262;
	setp.eq.s32	%p39, %r264, 0;
	@%p39 bra 	BB2_50;

	and.b32  	%r265, %r261, 536866816;
	bfe.u32 	%r266, %r265, 12, 5;
	mov.u32 	%r267, 1;
	shl.b32 	%r268, %r267, %r266;
	bfe.u32 	%r269, %r261, 15, 14;
	and.b32  	%r270, %r269, 16380;
	add.s32 	%r272, %r270, %r72;
	ld.shared.u32 	%r273, [%r272+16384];
	and.b32  	%r274, %r273, %r268;
	setp.eq.s32	%p40, %r274, 0;
	@%p40 bra 	BB2_50;

	and.b32  	%r275, %r262, 4095;
	cvta.to.global.u64 	%rd30, %rd4;
	mul.wide.u32 	%rd31, %r275, 4;
	add.s64 	%rd32, %rd30, %rd31;
	atom.global.add.u32 	%r276, [%rd32], 1;
	add.s32 	%r277, %r68, -1;
	min.s32 	%r278, %r276, %r277;
	mad.lo.s32 	%r279, %r275, %r68, %r278;
	cvta.to.global.u64 	%rd33, %rd3;
	mul.wide.s32 	%rd34, %r279, 8;
	add.s64 	%rd35, %rd33, %rd34;
	st.global.v2.u32 	[%rd35], {%r262, %r261};

BB2_50:
	add.s32 	%r388, %r388, 1;

BB2_51:
	shl.b32 	%r281, %r388, 9;
	add.s32 	%r47, %r281, %r3;
	setp.ge.s32	%p41, %r47, %r1;
	@%p41 bra 	BB2_55;

	add.s32 	%r284, %r47, %r37;
	mul.wide.s32 	%rd37, %r284, 8;
	add.s64 	%rd36, %rd2, %rd37;
	// inline asm
	ld.global.nc.v2.u32 {%r282,%r283}, [%rd36];
	// inline asm
	or.b32  	%r285, %r282, %r283;
	setp.eq.s32	%p42, %r285, 0;
	@%p42 bra 	BB2_55;

	and.b32  	%r286, %r282, 536866816;
	bfe.u32 	%r287, %r286, 12, 5;
	mov.u32 	%r288, 1;
	shl.b32 	%r289, %r288, %r287;
	bfe.u32 	%r290, %r282, 15, 14;
	and.b32  	%r291, %r290, 16380;
	add.s32 	%r293, %r291, %r72;
	ld.shared.u32 	%r294, [%r293+16384];
	and.b32  	%r295, %r294, %r289;
	setp.eq.s32	%p43, %r295, 0;
	@%p43 bra 	BB2_55;

	and.b32  	%r296, %r283, 4095;
	cvta.to.global.u64 	%rd38, %rd4;
	mul.wide.u32 	%rd39, %r296, 4;
	add.s64 	%rd40, %rd38, %rd39;
	atom.global.add.u32 	%r297, [%rd40], 1;
	add.s32 	%r298, %r68, -1;
	min.s32 	%r299, %r297, %r298;
	mad.lo.s32 	%r300, %r296, %r68, %r299;
	cvta.to.global.u64 	%rd41, %rd3;
	mul.wide.s32 	%rd42, %r300, 8;
	add.s64 	%rd43, %rd41, %rd42;
	st.global.v2.u32 	[%rd43], {%r283, %r282};

BB2_55:
	add.s32 	%r388, %r388, 1;

BB2_56:
	setp.lt.u32	%p44, %r38, 4;
	@%p44 bra 	BB2_74;

BB2_57:
	shl.b32 	%r301, %r388, 9;
	add.s32 	%r54, %r301, %r3;
	setp.ge.s32	%p45, %r54, %r1;
	@%p45 bra 	BB2_61;

	add.s32 	%r304, %r54, %r37;
	mul.wide.s32 	%rd45, %r304, 8;
	add.s64 	%rd44, %rd2, %rd45;
	// inline asm
	ld.global.nc.v2.u32 {%r302,%r303}, [%rd44];
	// inline asm
	or.b32  	%r305, %r302, %r303;
	setp.eq.s32	%p46, %r305, 0;
	@%p46 bra 	BB2_61;

	and.b32  	%r306, %r302, 536866816;
	bfe.u32 	%r307, %r306, 12, 5;
	mov.u32 	%r308, 1;
	shl.b32 	%r309, %r308, %r307;
	bfe.u32 	%r310, %r302, 15, 14;
	and.b32  	%r311, %r310, 16380;
	add.s32 	%r313, %r311, %r72;
	ld.shared.u32 	%r314, [%r313+16384];
	and.b32  	%r315, %r314, %r309;
	setp.eq.s32	%p47, %r315, 0;
	@%p47 bra 	BB2_61;

	and.b32  	%r316, %r303, 4095;
	cvta.to.global.u64 	%rd46, %rd4;
	mul.wide.u32 	%rd47, %r316, 4;
	add.s64 	%rd48, %rd46, %rd47;
	atom.global.add.u32 	%r317, [%rd48], 1;
	add.s32 	%r318, %r68, -1;
	min.s32 	%r319, %r317, %r318;
	mad.lo.s32 	%r320, %r316, %r68, %r319;
	cvta.to.global.u64 	%rd49, %rd3;
	mul.wide.s32 	%rd50, %r320, 8;
	add.s64 	%rd51, %rd49, %rd50;
	st.global.v2.u32 	[%rd51], {%r303, %r302};

BB2_61:
	add.s32 	%r57, %r54, 512;
	setp.ge.s32	%p48, %r57, %r1;
	@%p48 bra 	BB2_65;

	add.s32 	%r325, %r57, %r37;
	mul.wide.s32 	%rd53, %r325, 8;
	add.s64 	%rd52, %rd2, %rd53;
	// inline asm
	ld.global.nc.v2.u32 {%r323,%r324}, [%rd52];
	// inline asm
	or.b32  	%r326, %r323, %r324;
	setp.eq.s32	%p49, %r326, 0;
	@%p49 bra 	BB2_65;

	and.b32  	%r327, %r323, 536866816;
	bfe.u32 	%r328, %r327, 12, 5;
	mov.u32 	%r329, 1;
	shl.b32 	%r330, %r329, %r328;
	bfe.u32 	%r331, %r323, 15, 14;
	and.b32  	%r332, %r331, 16380;
	add.s32 	%r334, %r332, %r72;
	ld.shared.u32 	%r335, [%r334+16384];
	and.b32  	%r336, %r335, %r330;
	setp.eq.s32	%p50, %r336, 0;
	@%p50 bra 	BB2_65;

	and.b32  	%r337, %r324, 4095;
	cvta.to.global.u64 	%rd54, %rd4;
	mul.wide.u32 	%rd55, %r337, 4;
	add.s64 	%rd56, %rd54, %rd55;
	atom.global.add.u32 	%r338, [%rd56], 1;
	add.s32 	%r339, %r68, -1;
	min.s32 	%r340, %r338, %r339;
	mad.lo.s32 	%r341, %r337, %r68, %r340;
	cvta.to.global.u64 	%rd57, %rd3;
	mul.wide.s32 	%rd58, %r341, 8;
	add.s64 	%rd59, %rd57, %rd58;
	st.global.v2.u32 	[%rd59], {%r324, %r323};

BB2_65:
	add.s32 	%r60, %r54, 1024;
	setp.ge.s32	%p51, %r60, %r1;
	@%p51 bra 	BB2_69;

	add.s32 	%r346, %r60, %r37;
	mul.wide.s32 	%rd61, %r346, 8;
	add.s64 	%rd60, %rd2, %rd61;
	// inline asm
	ld.global.nc.v2.u32 {%r344,%r345}, [%rd60];
	// inline asm
	or.b32  	%r347, %r344, %r345;
	setp.eq.s32	%p52, %r347, 0;
	@%p52 bra 	BB2_69;

	and.b32  	%r348, %r344, 536866816;
	bfe.u32 	%r349, %r348, 12, 5;
	mov.u32 	%r350, 1;
	shl.b32 	%r351, %r350, %r349;
	bfe.u32 	%r352, %r344, 15, 14;
	and.b32  	%r353, %r352, 16380;
	add.s32 	%r355, %r353, %r72;
	ld.shared.u32 	%r356, [%r355+16384];
	and.b32  	%r357, %r356, %r351;
	setp.eq.s32	%p53, %r357, 0;
	@%p53 bra 	BB2_69;

	and.b32  	%r358, %r345, 4095;
	cvta.to.global.u64 	%rd62, %rd4;
	mul.wide.u32 	%rd63, %r358, 4;
	add.s64 	%rd64, %rd62, %rd63;
	atom.global.add.u32 	%r359, [%rd64], 1;
	add.s32 	%r360, %r68, -1;
	min.s32 	%r361, %r359, %r360;
	mad.lo.s32 	%r362, %r358, %r68, %r361;
	cvta.to.global.u64 	%rd65, %rd3;
	mul.wide.s32 	%rd66, %r362, 8;
	add.s64 	%rd67, %rd65, %rd66;
	st.global.v2.u32 	[%rd67], {%r345, %r344};

BB2_69:
	add.s32 	%r63, %r54, 1536;
	setp.ge.s32	%p54, %r63, %r1;
	@%p54 bra 	BB2_73;

	add.s32 	%r367, %r63, %r37;
	mul.wide.s32 	%rd69, %r367, 8;
	add.s64 	%rd68, %rd2, %rd69;
	// inline asm
	ld.global.nc.v2.u32 {%r365,%r366}, [%rd68];
	// inline asm
	or.b32  	%r368, %r365, %r366;
	setp.eq.s32	%p55, %r368, 0;
	@%p55 bra 	BB2_73;

	and.b32  	%r369, %r365, 536866816;
	bfe.u32 	%r370, %r369, 12, 5;
	mov.u32 	%r371, 1;
	shl.b32 	%r372, %r371, %r370;
	bfe.u32 	%r373, %r365, 15, 14;
	and.b32  	%r374, %r373, 16380;
	add.s32 	%r376, %r374, %r72;
	ld.shared.u32 	%r377, [%r376+16384];
	and.b32  	%r378, %r377, %r372;
	setp.eq.s32	%p56, %r378, 0;
	@%p56 bra 	BB2_73;

	and.b32  	%r379, %r366, 4095;
	cvta.to.global.u64 	%rd70, %rd4;
	mul.wide.u32 	%rd71, %r379, 4;
	add.s64 	%rd72, %rd70, %rd71;
	atom.global.add.u32 	%r380, [%rd72], 1;
	add.s32 	%r381, %r68, -1;
	min.s32 	%r382, %r380, %r381;
	mad.lo.s32 	%r383, %r379, %r68, %r382;
	cvta.to.global.u64 	%rd73, %rd3;
	mul.wide.s32 	%rd74, %r383, 8;
	add.s64 	%rd75, %rd73, %rd74;
	st.global.v2.u32 	[%rd75], {%r366, %r365};

BB2_73:
	add.s32 	%r388, %r388, 4;
	setp.lt.s32	%p57, %r388, %r4;
	@%p57 bra 	BB2_57;

BB2_74:
	ret;
}

	// .globl	FluffyTail
.visible .entry FluffyTail(
	.param .u64 FluffyTail_param_0,
	.param .u64 FluffyTail_param_1,
	.param .u64 FluffyTail_param_2,
	.param .u64 FluffyTail_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<20>;
	// demoted variable
	.shared .align 4 .u32 _ZZ10FluffyTailE7destIdx;

	ld.param.u64 	%rd2, [FluffyTail_param_0];
	ld.param.u64 	%rd3, [FluffyTail_param_1];
	ld.param.u64 	%rd5, [FluffyTail_param_2];
	ld.param.u64 	%rd4, [FluffyTail_param_3];
	mov.u32 	%r3, %ctaid.x;
	cvt.s64.s32	%rd1, %r3;
	cvta.to.global.u64 	%rd6, %rd5;
	mul.wide.s32 	%rd7, %r3, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.u32 	%r1, [%rd8];
	mov.u32 	%r2, %tid.x;
	setp.ne.s32	%p1, %r2, 0;
	@%p1 bra 	BB3_2;

	cvta.to.global.u64 	%rd9, %rd4;
	atom.global.add.u32 	%r4, [%rd9], %r1;
	st.shared.u32 	[_ZZ10FluffyTailE7destIdx], %r4;

BB3_2:
	bar.sync 	0;
	setp.ge.s32	%p2, %r2, %r1;
	@%p2 bra 	BB3_4;

	cvta.to.global.u64 	%rd10, %rd3;
	ld.shared.u32 	%r5, [_ZZ10FluffyTailE7destIdx];
	add.s32 	%r6, %r5, %r2;
	mul.wide.s32 	%rd11, %r6, 8;
	add.s64 	%rd12, %rd10, %rd11;
	mul.lo.s64 	%rd13, %rd1, 83968;
	shr.u64 	%rd14, %rd13, 2;
	cvt.s64.s32	%rd15, %r2;
	add.s64 	%rd16, %rd14, %rd15;
	cvta.to.global.u64 	%rd17, %rd2;
	shl.b64 	%rd18, %rd16, 3;
	add.s64 	%rd19, %rd17, %rd18;
	ld.global.v2.u32 	{%r7, %r8}, [%rd19];
	st.global.v2.u32 	[%rd12], {%r7, %r8};

BB3_4:
	ret;
}

	// .globl	FluffyRecovery
.visible .entry FluffyRecovery(
	.param .u64 FluffyRecovery_param_0,
	.param .u64 FluffyRecovery_param_1,
	.param .u64 FluffyRecovery_param_2,
	.param .u64 FluffyRecovery_param_3,
	.param .u64 FluffyRecovery_param_4
)
{
	.local .align 16 .b8 	__local_depot4[512];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<51>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<143>;
	.reg .b64 	%rd<153>;
	// demoted variable
	.shared .align 4 .b8 _ZZ14FluffyRecoveryE6nonces[168];

	mov.u64 	%SPL, __local_depot4;
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r1, %tid.x;
	shl.b32 	%r19, %r1, 2;
	mov.u32 	%r20, _ZZ14FluffyRecoveryE6nonces;
	add.s32 	%r2, %r20, %r19;
	setp.gt.s32	%p2, %r1, 41;
	@%p2 bra 	BB4_2;

	mov.u32 	%r21, 0;
	st.shared.u32 	[%r2], %r21;

BB4_2:
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	bar.sync 	0;
	mad.lo.s32 	%r23, %r3, %r4, %r1;
	shl.b32 	%r6, %r23, 10;
	mov.u32 	%r139, 0;

BB4_3:
	ld.param.u64 	%rd150, [FluffyRecovery_param_0];
	ld.param.u64 	%rd149, [FluffyRecovery_param_1];
	ld.param.u64 	%rd148, [FluffyRecovery_param_2];
	ld.param.u64 	%rd147, [FluffyRecovery_param_3];
	add.s32 	%r25, %r6, %r139;
	cvt.s64.s32	%rd146, %r25;
	mov.u32 	%r140, -64;
	mov.u64 	%rd145, %rd1;

BB4_4:
	xor.b64  	%rd31, %rd146, %rd147;
	add.s64 	%rd32, %rd31, %rd148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r26}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r27,%dummy}, %rd31;
	}
	shf.l.wrap.b32 	%r28, %r27, %r26, 16;
	shf.l.wrap.b32 	%r29, %r26, %r27, 16;
	mov.b64 	%rd33, {%r29, %r28};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r30}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r31,%dummy}, %rd149;
	}
	shf.l.wrap.b32 	%r32, %r31, %r30, 13;
	shf.l.wrap.b32 	%r33, %r30, %r31, 13;
	mov.b64 	%rd34, {%r33, %r32};
	add.s64 	%rd35, %rd149, %rd150;
	xor.b64  	%rd36, %rd34, %rd35;
	xor.b64  	%rd37, %rd33, %rd32;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd35, 32;
	shr.b64 	%rhs, %rd35, 32;
	add.u64 	%rd38, %lhs, %rhs;
	}
	add.s64 	%rd39, %rd36, %rd32;
	add.s64 	%rd40, %rd37, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r34}, %rd36;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35,%dummy}, %rd36;
	}
	shf.l.wrap.b32 	%r36, %r35, %r34, 17;
	shf.l.wrap.b32 	%r37, %r34, %r35, 17;
	mov.b64 	%rd41, {%r37, %r36};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39,%dummy}, %rd37;
	}
	shf.l.wrap.b32 	%r40, %r39, %r38, 21;
	shf.l.wrap.b32 	%r41, %r38, %r39, 21;
	mov.b64 	%rd42, {%r41, %r40};
	xor.b64  	%rd43, %rd41, %rd39;
	xor.b64  	%rd44, %rd42, %rd40;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd39, 32;
	shr.b64 	%rhs, %rd39, 32;
	add.u64 	%rd45, %lhs, %rhs;
	}
	add.s64 	%rd46, %rd40, %rd43;
	add.s64 	%rd47, %rd45, %rd44;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r42}, %rd43;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r43,%dummy}, %rd43;
	}
	shf.l.wrap.b32 	%r44, %r43, %r42, 13;
	shf.l.wrap.b32 	%r45, %r42, %r43, 13;
	mov.b64 	%rd48, {%r45, %r44};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r46}, %rd44;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r47,%dummy}, %rd44;
	}
	shf.l.wrap.b32 	%r48, %r47, %r46, 16;
	shf.l.wrap.b32 	%r49, %r46, %r47, 16;
	mov.b64 	%rd49, {%r49, %r48};
	xor.b64  	%rd50, %rd48, %rd46;
	xor.b64  	%rd51, %rd49, %rd47;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd46, 32;
	shr.b64 	%rhs, %rd46, 32;
	add.u64 	%rd52, %lhs, %rhs;
	}
	add.s64 	%rd53, %rd47, %rd50;
	add.s64 	%rd54, %rd52, %rd51;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r50}, %rd50;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r51,%dummy}, %rd50;
	}
	shf.l.wrap.b32 	%r52, %r51, %r50, 17;
	shf.l.wrap.b32 	%r53, %r50, %r51, 17;
	mov.b64 	%rd55, {%r53, %r52};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r54}, %rd51;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r55,%dummy}, %rd51;
	}
	shf.l.wrap.b32 	%r56, %r55, %r54, 21;
	shf.l.wrap.b32 	%r57, %r54, %r55, 21;
	mov.b64 	%rd56, {%r57, %r56};
	xor.b64  	%rd57, %rd55, %rd53;
	xor.b64  	%rd58, %rd56, %rd54;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd53, 32;
	shr.b64 	%rhs, %rd53, 32;
	add.u64 	%rd59, %lhs, %rhs;
	}
	xor.b64  	%rd60, %rd54, %rd146;
	xor.b64  	%rd61, %rd59, 255;
	add.s64 	%rd62, %rd60, %rd57;
	add.s64 	%rd63, %rd61, %rd58;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r58}, %rd57;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r59,%dummy}, %rd57;
	}
	shf.l.wrap.b32 	%r60, %r59, %r58, 13;
	shf.l.wrap.b32 	%r61, %r58, %r59, 13;
	mov.b64 	%rd64, {%r61, %r60};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r62}, %rd58;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r63,%dummy}, %rd58;
	}
	shf.l.wrap.b32 	%r64, %r63, %r62, 16;
	shf.l.wrap.b32 	%r65, %r62, %r63, 16;
	mov.b64 	%rd65, {%r65, %r64};
	xor.b64  	%rd66, %rd62, %rd64;
	xor.b64  	%rd67, %rd63, %rd65;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd62, 32;
	shr.b64 	%rhs, %rd62, 32;
	add.u64 	%rd68, %lhs, %rhs;
	}
	add.s64 	%rd69, %rd63, %rd66;
	add.s64 	%rd70, %rd68, %rd67;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r66}, %rd66;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r67,%dummy}, %rd66;
	}
	shf.l.wrap.b32 	%r68, %r67, %r66, 17;
	shf.l.wrap.b32 	%r69, %r66, %r67, 17;
	mov.b64 	%rd71, {%r69, %r68};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r70}, %rd67;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r71,%dummy}, %rd67;
	}
	shf.l.wrap.b32 	%r72, %r71, %r70, 21;
	shf.l.wrap.b32 	%r73, %r70, %r71, 21;
	mov.b64 	%rd72, {%r73, %r72};
	xor.b64  	%rd73, %rd69, %rd71;
	xor.b64  	%rd74, %rd70, %rd72;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd69, 32;
	shr.b64 	%rhs, %rd69, 32;
	add.u64 	%rd75, %lhs, %rhs;
	}
	add.s64 	%rd76, %rd70, %rd73;
	add.s64 	%rd77, %rd75, %rd74;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r74}, %rd73;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r75,%dummy}, %rd73;
	}
	shf.l.wrap.b32 	%r76, %r75, %r74, 13;
	shf.l.wrap.b32 	%r77, %r74, %r75, 13;
	mov.b64 	%rd78, {%r77, %r76};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r78}, %rd74;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r79,%dummy}, %rd74;
	}
	shf.l.wrap.b32 	%r80, %r79, %r78, 16;
	shf.l.wrap.b32 	%r81, %r78, %r79, 16;
	mov.b64 	%rd79, {%r81, %r80};
	xor.b64  	%rd80, %rd76, %rd78;
	xor.b64  	%rd81, %rd77, %rd79;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd76, 32;
	shr.b64 	%rhs, %rd76, 32;
	add.u64 	%rd82, %lhs, %rhs;
	}
	add.s64 	%rd83, %rd77, %rd80;
	add.s64 	%rd84, %rd82, %rd81;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r82}, %rd80;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r83,%dummy}, %rd80;
	}
	shf.l.wrap.b32 	%r84, %r83, %r82, 17;
	shf.l.wrap.b32 	%r85, %r82, %r83, 17;
	mov.b64 	%rd85, {%r85, %r84};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r86}, %rd81;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r87,%dummy}, %rd81;
	}
	shf.l.wrap.b32 	%r88, %r87, %r86, 21;
	shf.l.wrap.b32 	%r89, %r86, %r87, 21;
	mov.b64 	%rd86, {%r89, %r88};
	xor.b64  	%rd87, %rd83, %rd85;
	xor.b64  	%rd88, %rd84, %rd86;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd83, 32;
	shr.b64 	%rhs, %rd83, 32;
	add.u64 	%rd89, %lhs, %rhs;
	}
	add.s64 	%rd90, %rd84, %rd87;
	add.s64 	%rd91, %rd89, %rd88;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r90}, %rd87;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r91,%dummy}, %rd87;
	}
	shf.l.wrap.b32 	%r92, %r91, %r90, 13;
	shf.l.wrap.b32 	%r93, %r90, %r91, 13;
	mov.b64 	%rd92, {%r93, %r92};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r94}, %rd88;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r95,%dummy}, %rd88;
	}
	shf.l.wrap.b32 	%r96, %r95, %r94, 16;
	shf.l.wrap.b32 	%r97, %r94, %r95, 16;
	mov.b64 	%rd93, {%r97, %r96};
	xor.b64  	%rd94, %rd90, %rd92;
	xor.b64  	%rd95, %rd91, %rd93;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd90, 32;
	shr.b64 	%rhs, %rd90, 32;
	add.u64 	%rd96, %lhs, %rhs;
	}
	add.s64 	%rd97, %rd91, %rd94;
	add.s64 	%rd98, %rd96, %rd95;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd94;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r99,%dummy}, %rd94;
	}
	shf.l.wrap.b32 	%r100, %r99, %r98, 17;
	shf.l.wrap.b32 	%r101, %r98, %r99, 17;
	mov.b64 	%rd99, {%r101, %r100};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd95;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r103,%dummy}, %rd95;
	}
	shf.l.wrap.b32 	%r104, %r103, %r102, 21;
	shf.l.wrap.b32 	%r105, %r102, %r103, 21;
	mov.b64 	%rd100, {%r105, %r104};
	xor.b64  	%rd101, %rd97, %rd99;
	xor.b64  	%rd102, %rd98, %rd100;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd97, 32;
	shr.b64 	%rhs, %rd97, 32;
	add.u64 	%rd103, %lhs, %rhs;
	}
	add.s64 	%rd104, %rd98, %rd101;
	add.s64 	%rd105, %rd103, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r106}, %rd101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r107,%dummy}, %rd101;
	}
	shf.l.wrap.b32 	%r108, %r107, %r106, 13;
	shf.l.wrap.b32 	%r109, %r106, %r107, 13;
	mov.b64 	%rd106, {%r109, %r108};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r110}, %rd102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd102;
	}
	shf.l.wrap.b32 	%r112, %r111, %r110, 16;
	shf.l.wrap.b32 	%r113, %r110, %r111, 16;
	mov.b64 	%rd107, {%r113, %r112};
	xor.b64  	%rd108, %rd104, %rd106;
	xor.b64  	%rd109, %rd105, %rd107;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd104, 32;
	shr.b64 	%rhs, %rd104, 32;
	add.u64 	%rd110, %lhs, %rhs;
	}
	add.s64 	%rd111, %rd105, %rd108;
	add.s64 	%rd150, %rd110, %rd109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r114}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r115,%dummy}, %rd108;
	}
	shf.l.wrap.b32 	%r116, %r115, %r114, 17;
	shf.l.wrap.b32 	%r117, %r114, %r115, 17;
	mov.b64 	%rd112, {%r117, %r116};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r118}, %rd109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r119,%dummy}, %rd109;
	}
	shf.l.wrap.b32 	%r120, %r119, %r118, 21;
	shf.l.wrap.b32 	%r121, %r118, %r119, 21;
	mov.b64 	%rd113, {%r121, %r120};
	xor.b64  	%rd149, %rd111, %rd112;
	xor.b64  	%rd147, %rd150, %rd113;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd111, 32;
	shr.b64 	%rhs, %rd111, 32;
	add.u64 	%rd148, %lhs, %rhs;
	}
	xor.b64  	%rd114, %rd149, %rd113;
	xor.b64  	%rd115, %rd114, %rd148;
	st.local.u64 	[%rd145], %rd115;
	add.s64 	%rd146, %rd146, 1;
	add.s64 	%rd145, %rd145, 8;
	add.s32 	%r140, %r140, 1;
	setp.ne.s32	%p3, %r140, 0;
	@%p3 bra 	BB4_4;

	add.s64 	%rd138, %rd1, 504;
	ld.local.u64 	%rd17, [%rd138];
	mov.u16 	%rs4, 63;

BB4_6:
	setp.eq.s16	%p4, %rs4, 63;
	mov.u64 	%rd151, %rd17;
	@%p4 bra 	BB4_8;

	cvt.s32.s16	%r122, %rs4;
	mul.wide.s32 	%rd116, %r122, 8;
	add.s64 	%rd117, %rd1, %rd116;
	ld.local.u64 	%rd118, [%rd117];
	xor.b64  	%rd151, %rd118, %rd17;

BB4_8:
	mov.u32 	%r141, _ZZ14FluffyRecoveryE6nonces;
	mov.u32 	%r137, %tid.x;
	mov.u32 	%r136, %ntid.x;
	mov.u32 	%r135, %ctaid.x;
	mad.lo.s32 	%r134, %r135, %r136, %r137;
	shl.b32 	%r133, %r134, 10;
	add.s32 	%r132, %r139, %r133;
	bfe.u64 	%rd120, %rd151, 32, 29;
	and.b64  	%rd121, %rd151, 536870911;
	bfi.b64 	%rd20, %rd120, %rd121, 32, 29;
	bfi.b64 	%rd21, %rd121, %rd120, 32, 29;
	cvt.s32.s16	%r125, %rs4;
	add.s32 	%r11, %r125, %r132;
	mov.u32 	%r142, -42;
	mov.u64 	%rd152, recovery;

BB4_9:
	ld.const.u64 	%rd122, [%rd152];
	setp.eq.s64	%p5, %rd122, %rd20;
	setp.eq.s64	%p6, %rd122, %rd21;
	or.pred  	%p7, %p5, %p6;
	@!%p7 bra 	BB4_11;
	bra.uni 	BB4_10;

BB4_10:
	st.shared.u32 	[%r141], %r11;

BB4_11:
	ld.const.u64 	%rd123, [%rd152+8];
	setp.eq.s64	%p8, %rd123, %rd20;
	setp.eq.s64	%p9, %rd123, %rd21;
	or.pred  	%p10, %p8, %p9;
	@!%p10 bra 	BB4_13;
	bra.uni 	BB4_12;

BB4_12:
	st.shared.u32 	[%r141+4], %r11;

BB4_13:
	ld.const.u64 	%rd124, [%rd152+16];
	setp.eq.s64	%p11, %rd124, %rd20;
	setp.eq.s64	%p12, %rd124, %rd21;
	or.pred  	%p13, %p11, %p12;
	@!%p13 bra 	BB4_15;
	bra.uni 	BB4_14;

BB4_14:
	st.shared.u32 	[%r141+8], %r11;

BB4_15:
	ld.const.u64 	%rd125, [%rd152+24];
	setp.eq.s64	%p14, %rd125, %rd20;
	setp.eq.s64	%p15, %rd125, %rd21;
	or.pred  	%p16, %p14, %p15;
	@!%p16 bra 	BB4_17;
	bra.uni 	BB4_16;

BB4_16:
	st.shared.u32 	[%r141+12], %r11;

BB4_17:
	ld.const.u64 	%rd126, [%rd152+32];
	setp.eq.s64	%p17, %rd126, %rd20;
	setp.eq.s64	%p18, %rd126, %rd21;
	or.pred  	%p19, %p17, %p18;
	@!%p19 bra 	BB4_19;
	bra.uni 	BB4_18;

BB4_18:
	st.shared.u32 	[%r141+16], %r11;

BB4_19:
	ld.const.u64 	%rd127, [%rd152+40];
	setp.eq.s64	%p20, %rd127, %rd20;
	setp.eq.s64	%p21, %rd127, %rd21;
	or.pred  	%p22, %p20, %p21;
	@!%p22 bra 	BB4_21;
	bra.uni 	BB4_20;

BB4_20:
	st.shared.u32 	[%r141+20], %r11;

BB4_21:
	ld.const.u64 	%rd128, [%rd152+48];
	setp.eq.s64	%p23, %rd128, %rd20;
	setp.eq.s64	%p24, %rd128, %rd21;
	or.pred  	%p25, %p23, %p24;
	@!%p25 bra 	BB4_23;
	bra.uni 	BB4_22;

BB4_22:
	st.shared.u32 	[%r141+24], %r11;

BB4_23:
	ld.const.u64 	%rd129, [%rd152+56];
	setp.eq.s64	%p26, %rd129, %rd20;
	setp.eq.s64	%p27, %rd129, %rd21;
	or.pred  	%p28, %p26, %p27;
	@!%p28 bra 	BB4_25;
	bra.uni 	BB4_24;

BB4_24:
	st.shared.u32 	[%r141+28], %r11;

BB4_25:
	ld.const.u64 	%rd130, [%rd152+64];
	setp.eq.s64	%p29, %rd130, %rd20;
	setp.eq.s64	%p30, %rd130, %rd21;
	or.pred  	%p31, %p29, %p30;
	@!%p31 bra 	BB4_27;
	bra.uni 	BB4_26;

BB4_26:
	st.shared.u32 	[%r141+32], %r11;

BB4_27:
	ld.const.u64 	%rd131, [%rd152+72];
	setp.eq.s64	%p32, %rd131, %rd20;
	setp.eq.s64	%p33, %rd131, %rd21;
	or.pred  	%p34, %p32, %p33;
	@!%p34 bra 	BB4_29;
	bra.uni 	BB4_28;

BB4_28:
	st.shared.u32 	[%r141+36], %r11;

BB4_29:
	ld.const.u64 	%rd132, [%rd152+80];
	setp.eq.s64	%p35, %rd132, %rd20;
	setp.eq.s64	%p36, %rd132, %rd21;
	or.pred  	%p37, %p35, %p36;
	@!%p37 bra 	BB4_31;
	bra.uni 	BB4_30;

BB4_30:
	st.shared.u32 	[%r141+40], %r11;

BB4_31:
	ld.const.u64 	%rd133, [%rd152+88];
	setp.eq.s64	%p38, %rd133, %rd20;
	setp.eq.s64	%p39, %rd133, %rd21;
	or.pred  	%p40, %p38, %p39;
	@!%p40 bra 	BB4_33;
	bra.uni 	BB4_32;

BB4_32:
	st.shared.u32 	[%r141+44], %r11;

BB4_33:
	ld.const.u64 	%rd134, [%rd152+96];
	setp.eq.s64	%p41, %rd134, %rd20;
	setp.eq.s64	%p42, %rd134, %rd21;
	or.pred  	%p43, %p41, %p42;
	@!%p43 bra 	BB4_35;
	bra.uni 	BB4_34;

BB4_34:
	st.shared.u32 	[%r141+48], %r11;

BB4_35:
	ld.const.u64 	%rd135, [%rd152+104];
	setp.eq.s64	%p44, %rd135, %rd20;
	setp.eq.s64	%p45, %rd135, %rd21;
	or.pred  	%p46, %p44, %p45;
	@!%p46 bra 	BB4_37;
	bra.uni 	BB4_36;

BB4_36:
	st.shared.u32 	[%r141+52], %r11;

BB4_37:
	add.s32 	%r142, %r142, 14;
	add.s32 	%r141, %r141, 56;
	add.s64 	%rd152, %rd152, 112;
	setp.ne.s32	%p47, %r142, 0;
	@%p47 bra 	BB4_9;

	add.s16 	%rs2, %rs4, -1;
	setp.gt.s16	%p48, %rs4, 0;
	mov.u16 	%rs4, %rs2;
	@%p48 bra 	BB4_6;

	add.s32 	%r139, %r139, 64;
	setp.lt.s32	%p49, %r139, 1024;
	@%p49 bra 	BB4_3;

	mov.u32 	%r126, %tid.x;
	setp.lt.s32	%p1, %r126, 42;
	bar.sync 	0;
	@!%p1 bra 	BB4_43;
	bra.uni 	BB4_41;

BB4_41:
	mov.u32 	%r130, %tid.x;
	shl.b32 	%r129, %r130, 2;
	mov.u32 	%r128, _ZZ14FluffyRecoveryE6nonces;
	add.s32 	%r127, %r128, %r129;
	ld.shared.u32 	%r18, [%r127];
	setp.eq.s32	%p50, %r18, 0;
	@%p50 bra 	BB4_43;

	ld.param.u64 	%rd144, [FluffyRecovery_param_4];
	cvta.to.global.u64 	%rd143, %rd144;
	mov.u32 	%r131, %tid.x;
	mul.wide.s32 	%rd136, %r131, 4;
	add.s64 	%rd137, %rd143, %rd136;
	st.global.u32 	[%rd137], %r18;

BB4_43:
	ret;
}


